#!/usr/bin/env bash

say() {
    fold -s -w 76 <<<"$1" | sed 's/^/  /' # wraps text nicely and adds two leading spaces
    sleep "${2-0}"
}

connectiontest() {
    local TEXT_CHECKING='Checking internet connection...'
    local TEXT_FAILED='Internet connection test failed!'
    local TEXT_ABORT='Script aborted.'
    local TEXT_OK='Internet connection test passed!'

    local -i i attempts=${1-0}
    for ((i = 0; i < attempts || attempts == 0; i++)); do
        say "$TEXT_CHECKING"
        if wget -O - 'http://ftp.debian.org/debian/README' &>/dev/null; then
            say "$TEXT_OK" 1
            return 0
        fi
        say "$TEXT_FAILED" 1
        if ((i == attempts)); then # if last attempt
            say "$TEXT_ABORT"
            ((attempts == 1)) && return 1 || exit 1
        fi
        clear
    done
}
connectiontest

extra() {
    which pacman >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        curl -fsSL https://raw.githubusercontent.com/YurinDoctrine/arch-linux-base-setup/main/arch-linux-base-setup.sh >arch-linux-base-setup.sh &&
            chmod 755 arch-linux-base-setup.sh &&
            ./arch-linux-base-setup.sh
    else
        clear
        curl -fsSL https://raw.githubusercontent.com/YurinDoctrine/ubuntu-base-setup/main/ubuntu-base-setup.sh >ubuntu-base-setup.sh &&
            chmod 755 ubuntu-base-setup.sh &&
            ./ubuntu-base-setup.sh
    fi
}

if [[ $1 = '--firstrun' ]]; then # First run
    [[ -d /live/overlay || -e $HOME/.config/crunchbangplusplus/cbpp-welcome || ! $(groups) =~ ( |^)sudo( |$) ]] && exit 1
    terminator -x 'cbpp-welcome'
elif [[ $1 = '--open' ]]; then # Open in terminal
    terminator -x 'cbpp-welcome'
fi

if [[ ! $(groups) =~ ( |^)sudo( |$) ]]; then
    echo $"Error: Must be a member of the sudo group to run this script" >&2
    exit 1
fi

cd /tmp

final() {

    sleep 0.3 && clear
    echo -e "
###############################################################################
# WELCOME! Would you like to run the author's post-installation?
###############################################################################"

    read -p $'yes/no >_: ' noc
    if [[ "$noc" == "yes" ]]; then
        echo -e "RUNNING ..."
        extra
    elif [[ "$noc" == "no" ]]; then
        echo -e "LEAVING ..."
        return 0
    else
        echo -e "INVALID VALUE!"
        final
    fi
}
final

sudo sed -i 's/^(sleep 6s && cbpp-welcome --firstrun) &/##/' $HOME/.config/openbox/autostart

sudo sed -i 's/^(sleep 6s && cbpp-welcome --firstrun) &/##/' /etc/skel/.config/openbox/autostart

cd

exit 0
