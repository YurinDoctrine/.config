#!/usr/bin/env bash

if [[ $1 = '--first-run' ]]; then # First run
    kitty cbpp-welcome
    exit 0
fi

say() {
    fold -s -w 76 <<<"$1" | sed -e 's/^/  /' # wraps text nicely and adds two leading spaces
    sleep "${2-0}"
}

connectiontest() {
    local TEXT_CHECKING='Checking internet connection...'
    local TEXT_FAILED='Internet connection test failed!'
    local TEXT_ABORT='Please connect to an Internet first.'
    local TEXT_OK='Internet connection test passed!'

    local -i i attempts=${1-0}

    for ((i = 0; i < attempts || attempts == 0; i++)); do
        say "$TEXT_CHECKING"
        if wget -qO - 'http://ftp.debian.org/debian/README' &>/dev/null; then
            say "$TEXT_OK" 1
            return 0
        fi
        say "$TEXT_FAILED" 1
        if ((i == attempts)); then # if last attempt
            say "$TEXT_ABORT"
            ((attempts == 1)) && return 1
        fi
    done
}
sleep 5s
connectiontest
clear

doas wget -qO /usr/bin/cbpp-include.cfg https://raw.githubusercontent.com/YurinDoctrine/.config/artix/cbpp-include.cfg &&
    if ! . cbpp-include.cfg 2>/dev/null; then
        echo '  Failed to locate cbpp-include.cfg in PATH' >&2
        exit 1
    fi
trap 'postinstall' SIGINT
postinstall

chsh -s /usr/bin/fish
doas ln -sfT /home/$USER/.local/bin/mksh /bin/sh

doas sed -i -e 's/^(sleep 5s && exec cbpp-welcome --first-run) &/#(sleep 5s && exec cbpp-welcome --first-run) &/' /home/$USER/.config/openbox/autostart
doas sed -i -e 's/^(sleep 5s && exec cbpp-welcome --first-run) &/#(sleep 5s && exec cbpp-welcome --first-run) &/' /etc/skel/.config/openbox/autostart
doas sed -i -e 's/^(sleep 5s && exec cbpp-welcome --first-run) &/#(sleep 5s && exec cbpp-welcome --first-run) &/' /root/.config/openbox/autostart

doas mkdir /usr/share/desktop-directories
 mkdir /home/$USER/backup
 mkdir /home/$USER/templates
 mkdir /home/$USER/public
 mkdir /home/$USER/desktop
 mkdir /home/$USER/documents
 mkdir /home/$USER/downloads
 mkdir /home/$USER/images
 mkdir /home/$USER/music
 mkdir /home/$USER/videos
doas chown -hR $USER:$USER /home/$USER

doas ln -s /opt/ /home/$USER/
doas ln -s /tmp/ /home/$USER/

if [ -f "/home/$USER/.config/gtk-3.0/bookmarks" ]; then
    sed -i -e "s/\$USER/$(whoami)/g" /home/$USER/.config/gtk-3.0/bookmarks >/dev/null 2>&1
fi

if [ -f "/home/$USER/.config/user-dirs.dirs" ]; then
    sed -i -e "s/\$USER/$(whoami)/g" /home/$USER/.config/user-dirs.dirs >/dev/null 2>&1
fi

if [ -f "/home/$USER/.gtk-bookmarks" ]; then
    sed -i -e "s/\$USER/$(whoami)/g" /home/$USER/.gtk-bookmarks >/dev/null 2>&1
fi

xdg-user-dirs-update

gtk-update-icon-cache

fc-cache -rfv

doas flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

doas pacman -S --noconfirm python-pyudev which xclip xmlstarlet

doas cp -rfd /etc/pacman.conf.bak /etc/pacman.conf

echo -e "
# Arch
#[extra]
#Include = /etc/pacman.d/mirrorlist-arch

#[community]
#Include = /etc/pacman.d/mirrorlist-arch

#[multilib]
#Include = /etc/pacman.d/mirrorlist-arch
" | doas tee -a /etc/pacman.conf

python3 -m pip install --user --upgrade --break-system-packages pip
python3 -m pip install --user --upgrade --break-system-packages wheel
python3 -m pip install --user --upgrade --break-system-packages pyyaml
python3 -m pip install --user --upgrade --break-system-packages Pillow

wget -qO /home/$USER/.local/bin/cbpp-include.cfg https://raw.githubusercontent.com/YurinDoctrine/.config/artix/.local/bin/cbpp-include.cfg
wget -qO /home/$USER/.local/share/fonts/Roboto.ttf https://github.com/YurinDoctrine/.config/raw/artix/kitty/Roboto.ttf
doas wget -qO /boot/grub/cbpp_splash.png https://raw.githubusercontent.com/CBPP/cbpp-configs/master/cbpp-configs/data/boot/grub/cbpp_splash.png && doas update-grub

doas rm -rfd /home/$USER/.bash_profile
doas rm -rfd /etc/skel/.bash_profile
doas rm -rfd /root/.bash_profile

firefox-esr &
sleep 10s && pkill firefox-esr
cd /home/$USER/.mozilla/firefox-esr/*default-release*/ && wget -q https://raw.githubusercontent.com/arkenfox/user.js/master/user.js && sed -i -e 's/user_pref("privacy.clearOnShutdown.cookies", true);/user_pref("privacy.clearOnShutdown.cookies", false);/' user.js && sed -i -e 's/user_pref("privacy.clearOnShutdown.offlineApps", true);/user_pref("privacy.clearOnShutdown.offlineApps", false);/' user.js && sed -i -e 's/user_pref("browser.download.useDownloadDir", false);/\/\/user_pref("browser.download.useDownloadDir", false);/' user.js && cd

doas bash -c "sleep 1 && shutdown -r now"
