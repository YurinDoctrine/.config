#!/usr/bin/env bash
[[ -d /live/overlay || ! $(groups) =~ ( |^)sudo( |$) ]] && exit 1

if [[ $1 = '--first-run' ]]; then # First run
    kitty cbpp-welcome
    exit 0
fi

say() {
    fold -s -w 76 <<<"$1" | sed -e 's/^/  /' # wraps text nicely and adds two leading spaces
    sleep "${2-0}"
}

connectiontest() {
    local TEXT_CHECKING='Checking internet connection...'
    local TEXT_FAILED='Internet connection test failed!'
    local TEXT_ABORT='Script aborted.'
    local TEXT_OK='Internet connection test passed!'

    local -i i attempts=${1-0}

    for ((i = 0; i < attempts || attempts == 0; i++)); do
        say "$TEXT_CHECKING"
        if wget -qO - 'http://ftp.debian.org/debian/README' &>/dev/null; then
            say "$TEXT_OK" 1
            return 0
        fi
        say "$TEXT_FAILED" 1
        if ((i == attempts)); then # if last attempt
            say "$TEXT_ABORT"
            ((attempts == 1)) && return 1 || exit 1
        fi
        clear
    done
}
sleep 6s
connectiontest

sudo wget -P /usr/bin/ https://raw.githubusercontent.com/YurinDoctrine/.config/main/cbpp-include.cfg &&
    if ! . cbpp-include.cfg 2>/dev/null; then
        echo '  Failed to locate cbpp-include.cfg in PATH' >&2
        exit 1
    fi
trap 'postinstall' SIGINT
postinstall

extra() {
    cd /tmp
    clear
    curl --tlsv1.2 -fsSL https://raw.githubusercontent.com/YurinDoctrine/ubuntu-base-setup/main/ubuntu-base-setup.sh >ubuntu-base-setup.sh &&
        chmod 755 ubuntu-base-setup.sh &&
        ./ubuntu-base-setup.sh
}

final() {

    clear
    echo -e "
###############################################################################
# WELCOME! Would you like to run the author's post-installation?(highly recommended)
###############################################################################"

    read -p $'yes/no >_: ' noc
    if [[ "$noc" == "yes" ]]; then
        echo -e "RUNNING ..."
        extra
    elif [[ "$noc" == "no" ]]; then
        echo -e "LEAVING ..."
        return 0
    else
        echo -e "INVALID VALUE!"
        final
    fi
}
trap 'final' SIGINT
final

chsh -s /usr/bin/fish
sudo sed -i -e 's/^(sleep 6s && exec cbpp-welcome --first-run) &/#(sleep 6s && exec cbpp-welcome --first-run) &/' /home/$USER/.config/openbox/autostart
sudo sed -i -e 's/^(sleep 6s && exec cbpp-welcome --first-run) &/#(sleep 6s && exec cbpp-welcome --first-run) &/' /etc/skel/.config/openbox/autostart
sudo sed -i -e 's/^(sleep 6s && exec cbpp-welcome --first-run) &/#(sleep 6s && exec cbpp-welcome --first-run) &/' /root/.config/openbox/autostart

sudo mkdir /usr/share/desktop-directories
sudo mkdir /usr/share/fonts/truetype/roboto
 mkdir /home/$USER/backup
 mkdir /home/$USER/templates
 mkdir /home/$USER/public
 mkdir /home/$USER/desktop
 mkdir /home/$USER/documents
 mkdir /home/$USER/downloads
 mkdir /home/$USER/pictures
 mkdir /home/$USER/music
 mkdir /home/$USER/videos
sudo chown -hR $USER:$USER /home/$USER

sudo ln -s /opt/ /home/$USER/
sudo ln -s /tmp/ /home/$USER/

if [ -f "/home/$USER/.config/user-dirs.dirs" ]; then
    rpl -fq '\$USER' $(whoami) /home/$USER/.config/user-dirs.dirs >/dev/null 2>&1
fi

if [ -f "/home/$USER/.gtk-bookmarks" ]; then
    rpl -fq '\$USER' $(whoami) /home/$USER/.gtk-bookmarks >/dev/null 2>&1
fi

xdg-user-dirs-gtk-update
xdg-user-dirs-update

gtk-update-icon-cache

sudo sed -i -e 's/^keyboard=0/keyboard=1/' /etc/lxdm/default.conf

sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

python3 -m pip install --user --upgrade --break-system-packages pip
python3 -m pip install --user --upgrade --break-system-packages wheel
python3 -m pip install --user --upgrade --break-system-packages pyyaml
python3 -m pip install --user --upgrade --break-system-packages Pillow

sudo apt-get install xterm python3-pyudev -yy
wget https://github.com/DAFT-8/debpakir/releases/download/latest/debpakir_0.0.3_amd64.deb && sudo dpkg -i debpakir_0.0.3_amd64.deb
wget https://github.com/DAFT-8/cbpp-exit-gui/releases/download/latest/cbpp-exit-gui_0.0.1_all.deb && sudo dpkg -i cbpp-exit-gui_0.0.1_all.deb
wget https://github.com/DAFT-8/flasher/releases/download/latest/flasher_0.0.2_amd64.deb && sudo dpkg -i flasher_0.0.2_amd64.deb
sudo apt-get install -f --assume-yes
sudo wget -P /usr/share/fonts/truetype/roboto/ https://github.com/YurinDoctrine/.config/raw/main/kitty/Roboto.ttf
sudo wget -P /boot/grub/ https://raw.githubusercontent.com/CBPP/cbpp-configs/master/cbpp-configs/data/boot/grub/cbpp_splash.png && sudo update-grub
wget -P /home/$USER/.local/bin/ https://raw.githubusercontent.com/YurinDoctrine/.config/main/.local/bin/cbpp-include.cfg

curl -s https://liquorix.net/install-liquorix.sh | sudo bash

(sleep 20s && killall openbox) &

curl -s https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | fish
